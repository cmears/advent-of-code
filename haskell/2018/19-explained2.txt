0: jump to 17 (init)

1: r[2] = 1

outer:
2: r[5] = 1

inner:
3: r[1] = r[2]*r[5]
4: if r[2]*r[5] == r[4]
7:   r[0] += r[2]
8: r[5] += 1

9:  if r[5] <= r[4]
11:   jump to 3

12: r[2] += 1
13: if r[2] <= r[4]
15:   jump to 2

for (x = 1 to n)
  for (y = 1 to n)
    if (x*y) == n
      sum += x
i.e. sum of divisors of n

16: exit

init:
17: r[4] += 2
18: r[4] *= r[4]
19: r[4] *= 19
20: r[4] *= 11
  -- now r[4] = (2*2)*19*11 = 836

21: r[1] += 4
22: r[1] *= 22
23: r[1] += 2
  -- now r[1] = 4*22+2 = 90

24: r[4] += r[1]
  -- now r[4] = 926

25: r[3] += r[0]
  -- if part 1, jump to 1
26: jump to 1
  -- if part 2, continue...

27: r[1] = 27
28: r[1] *= 28
29: r[1] += 29
30: r[1] *= 30
31: r[1] *= 14
32: r[1] *= 32

  -- now r[1] = 10550400

33: r[4] += r[1]
  -- now r[4] = 10550400 + 926 = 10551326
34: r[0] = 0
35: jump to 1

